Class {
	#name : #ASTCSubclassResponsibilityVisitor,
	#superclass : #ASTCVisitor,
	#category : #'ASTC-Core-visitors'
}

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitAbstractWhile: anAbstractWhile [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitAdditionOperator: anAdditionOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitAddressOfOperator: anAddressOfOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitAndOperator: anAndOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitAssignementAdditionOperator: anAssignementAdditionOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitAssignmentOperator: anAssignmentOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBinaryOperator: aBinaryOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBitLeftShiftOperator: aBitLeftShiftOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBitRightShiftOperator: aBitRightShiftOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBitwiseAndOperator: aBitwiseAndOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBitwiseOrOperator: aBitwiseOrOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBitwiseXorOperator: aBitwiseXorOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBlock: aBlock [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitBreak: aBreak [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitCastOperator: aCastOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitCompilationUnit: aCompilationUnit [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitDeclaration: aDeclaration [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitDeclarationStatement: aDeclarationStatement [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitDefinition: aDefinition [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitDivisionOperator: aDivisionOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitDoWhile: aDoWhile [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitEmptyStatement: anEmptyStatement [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitEqualityOperator: anEqualityOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitExpression: anExpression [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitExpressionList: anExpressionList [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitExpressionStatement: anExpressionStatement [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitFor: aFor [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitFunctionCall: aFunctionCall [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitFunctionDeclaration: aFunctionDeclaration [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitFunctionDefinition: aFunctionDefinition [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitGreaterOperator: aGreaterOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitGreaterOrEqualOperator: aGreaterOrEqualOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitIdentifier: anIdentifier [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitIf: anIf [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitIndexerOperator: anIndexerOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitInequalityOperator: anInequalityOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitLesserOperator: aLesserOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitLesserOrEqualOperator: aLesserOrEqualOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitLiteral: aLiteral [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitLogicalNotOperator: aLogicalNotOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitLoop: aLoop [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitModuloOperator: aModuloOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitMultiplicationOperator: aMultiplicationOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitNegationOperator: aNegationOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitNode: aNode [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitOperator: anOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitOrOperator: anOrOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitPreDecrementOperator: aPreDecrementOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitPreIncrementOperator: aPreIncrementOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitPreprocessorIf: aPreprocessorIf [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitProject: aProject [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitRawCCode: aRawCCode [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitRawDeclaration: aRawDeclaration [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitReturn: aReturn [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitStatement: aStatement [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitStructAccessPointerOperator: aStructAccessPointerOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitStructAccessStaticOperator: aStructAccessStaticOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitStructureDeclaration: aStructureDeclaration [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitStructureDefinition: aStructureDefinition [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitSubtractionOperator: aSubtractionOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitSwitch: aSwitch [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitSwitchCase: aSwitchCase [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitTernaryConditionalOperator: aTernaryConditionalOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitType: aType [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitUnaryOperator: anUnaryOperator [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitVariableDeclaration: aVariableDeclaration [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitVariableDefinition: aVariableDefinition [
	self subclassResponsibility
]

{ #category : #visiting }
ASTCSubclassResponsibilityVisitor >> visitWhile: aWhile [
	self subclassResponsibility
]
