Class {
	#name : #ASTCVisitor,
	#superclass : #Object,
	#category : #'ASTC-Core-visitors'
}

{ #category : #visiting }
ASTCVisitor >> visitAbstractWhile: anAbstractWhile [
	
]

{ #category : #visiting }
ASTCVisitor >> visitAdditionOperator: anAdditionOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitAddressOfOperator: anAddressOfOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitAndOperator: anAndOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitAssignementAdditionOperator: anAssignementAdditionOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitAssignmentOperator: anAssignmentOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBinaryOperator: aBinaryOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBitLeftShiftOperator: aBitLeftShiftOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBitRightShiftOperator: aBitRightShiftOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBitwiseAndOperator: aBitwiseAndOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBitwiseOrOperator: aBitwiseOrOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBitwiseXorOperator: aBitwiseXorOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBlock: aBlock [
	
]

{ #category : #visiting }
ASTCVisitor >> visitBreak: aBreak [
	
]

{ #category : #visiting }
ASTCVisitor >> visitCastOperator: aCastOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitCompilationUnit: aCompilationUnit [
	
]

{ #category : #visiting }
ASTCVisitor >> visitDeclaration: aDeclaration [
	
]

{ #category : #visiting }
ASTCVisitor >> visitDeclarationStatement: aDeclarationStatement [
	
]

{ #category : #visiting }
ASTCVisitor >> visitDefinition: aDefinition [
	
]

{ #category : #visiting }
ASTCVisitor >> visitDivisionOperator: aDivisionOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitDoWhile: aDoWhile [
	
]

{ #category : #visiting }
ASTCVisitor >> visitEmptyStatement: anEmptyStatement [
	
]

{ #category : #visiting }
ASTCVisitor >> visitEqualityOperator: anEqualityOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitExpression: anExpression [
	
]

{ #category : #visiting }
ASTCVisitor >> visitExpressionList: anExpressionList [
	
]

{ #category : #visiting }
ASTCVisitor >> visitExpressionStatement: anExpressionStatement [
	
]

{ #category : #visiting }
ASTCVisitor >> visitFor: aFor [
	
]

{ #category : #visiting }
ASTCVisitor >> visitFunctionCall: aFunctionCall [
	
]

{ #category : #visiting }
ASTCVisitor >> visitFunctionDeclaration: aFunctionDeclaration [
	
]

{ #category : #visiting }
ASTCVisitor >> visitFunctionDefinition: aFunctionDefinition [
	
]

{ #category : #visiting }
ASTCVisitor >> visitGreaterOperator: aGreaterOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitGreaterOrEqualOperator: aGreaterOrEqualOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitIdentifier: anIdentifier [
	
]

{ #category : #visiting }
ASTCVisitor >> visitIf: anIf [
	
]

{ #category : #visiting }
ASTCVisitor >> visitIndexerOperator: anIndexerOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitInequalityOperator: anInequalityOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitLesserOperator: aLesserOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitLesserOrEqualOperator: aLesserOrEqualOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitLiteral: aLiteral [
	
]

{ #category : #visiting }
ASTCVisitor >> visitLogicalNotOperator: aLogicalNotOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitLoop: aLoop [
	
]

{ #category : #visiting }
ASTCVisitor >> visitModuloOperator: aModuloOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitMultiplicationOperator: aMultiplicationOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitNegationOperator: aNegationOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitNode: aNode [
	
]

{ #category : #visiting }
ASTCVisitor >> visitOperator: anOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitOrOperator: anOrOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitPreDecrementOperator: aPreDecrementOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitPreIncrementOperator: aPreIncrementOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitPreprocessorIf: aPreprocessorIf [
	
]

{ #category : #visiting }
ASTCVisitor >> visitProject: aProject [
	
]

{ #category : #visiting }
ASTCVisitor >> visitRawCCode: aRawCCode [
	
]

{ #category : #visiting }
ASTCVisitor >> visitRawDeclaration: aRawDeclaration [
	
]

{ #category : #visiting }
ASTCVisitor >> visitReturn: aReturn [
	
]

{ #category : #visiting }
ASTCVisitor >> visitStatement: aStatement [
	
]

{ #category : #visiting }
ASTCVisitor >> visitStructAccessPointerOperator: aStructAccessPointerOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitStructAccessStaticOperator: aStructAccessStaticOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitStructureDeclaration: aStructureDeclaration [
	
]

{ #category : #visiting }
ASTCVisitor >> visitStructureDefinition: aStructureDefinition [
	
]

{ #category : #visiting }
ASTCVisitor >> visitSubtractionOperator: aSubtractionOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitTernaryConditionalOperator: aTernaryConditionalOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitType: aType [
	
]

{ #category : #visiting }
ASTCVisitor >> visitUnaryOperator: anUnaryOperator [
	
]

{ #category : #visiting }
ASTCVisitor >> visitVariableDeclaration: aVariableDeclaration [
	
]

{ #category : #visiting }
ASTCVisitor >> visitVariableDefinition: aVariableDefinition [
	
]

{ #category : #visiting }
ASTCVisitor >> visitWhile: aWhile [
	
]
